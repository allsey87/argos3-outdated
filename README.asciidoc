ARGoS README
=============
:Author: Carlo Pinciroli
:Email:  ilpincy@gmail.com
:Date:   February 13th, 2013

What is ARGoS?
---------------

ARGoS is a physics-based simulator to designed to simulate large-scale robot
swarms. Benchmark results show that ARGoS can perform physics-accurate
simulation involving thousands of robots in a fraction of real time.
ARGoS' main features are:

* Multi-threaded and deeply modular architecture, more flexible than any
  simulator with equivalent features;
* The possibility to run multiple physics engines at the same time;
* The possibility to divide the physical space in region, and assign different
  regions to different physics engines.

Starting from version 3, ARGoS is released under the terms of the MIT license.

Downloading ARGoS
------------------

You can download a binary package of ARGoS from
http://iridia.ulb.ac.be/argos/download.php. Alternatively, you can download the
development sources through git:

 $ git clone https://github.com/ilpincy/argos3.git argos3

Compiling ARGoS
----------------

If you downloaded the sources of ARGoS and want to compile its code, you need:

* A UNIX system (Linux or MacOSX; Microsoft Windows is not supported)
* _g++_ >= 4.2
* _cmake_ >= 2.6

If you want to compile the simulator, you need:

* _gsl_ >= 1.15
* _FreeImage_ >= 3.15

The OpenGL-based graphical visualization is compiled only if the following
libraries are found:

* _Qt_ >= 4.5
* _freeglut_ >= 2.6.0

If you want to create the documentation you need:

* To create the API:
** _Doxygen_ >= 1.7.3
** _Graphviz/dot_ >= 2.28
* To create the HTML version of this README:
** _asciidoc_ >= 8.6.2

If you want to create the Lua wrapper you need:

* _lua_ == 5.1

Compiling the code
~~~~~~~~~~~~~~~~~~

The compilation of ARGoS is configured through CMake.

Fast compilation instructions
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Compiling the ARGoS simulator
++++++++++++++++++++++++++++++

 $ cd argos3
 $ mkdir build_simulator
 $ cd build_simulator
 $ cmake ../src
 $ make

Compiling ARGoS for a robot
++++++++++++++++++++++++++++

 $ cd argos3
 $ mkdir build_myrobot
 $ cd build_myrobot
 $ cmake -DARGOS_BUILD_FOR=myrobot ../src
 $ make

Compiling the documentation
+++++++++++++++++++++++++++

 $ cd argos3
 $ cd build_simulator # or 'cd build_myrobot'
 $ make doc

ARGoS sources under Eclipse
+++++++++++++++++++++++++++

To use Eclipse with the ARGoS sources, you must have the CDT installed
(http://www.eclipse.org/cdt/). Optionally, you can also install CMakeEd
(http://cmakeed.sourceforge.net/) to modify the +CMakeLists.txt+ files
comfortably within Eclipse.   

To configure the ARGoS sources for Eclipse, execute CMake as follows:  

 $ cd argos3
 $ cmake -G "Eclipse CDT4 - Unix Makefiles" src/

Now open Eclipse. Click on _File_ -> _Import..._, select
_Existing project into workspace_, and click on _Next_. Set the base +argos3+
directory as the root directory in the dialog that appears. Click on _Next_
and you're ready to go.

Advanced compilation configuration
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The compilation of ARGoS can be configured through a set of CMake options:

[options="header"]
|==========================================================================================================
| Variable                    | Type      | Meaning [default value]
| +CMAKE_BUILD_TYPE+          | _STRING_  | Build type (+Debug+, +Release+, etc.) [empty]
| +CMAKE_INSTALL_PREFIX+      | _STRING_  | Install prefix (+/usr+, +/usr/local+, etc.) [+/usr/local+]
| +ARGOS_BUILD_FOR+           | _STRING_  | Target of compilation (+simulator+ or robot name) [+simulator+]
| +ARGOS_THREADSAFE_LOG+      | _BOOLEAN_ | Use or not the thread-safe version of +LOG+/+LOGERR+. [+ON+]
| +ARGOS_DYNAMIC_LOADING+     | _BOOLEAN_ | Compile (and use) dynamic loading facilities [+ON+]
| +ARGOS_USE_DOUBLE+          | _BOOLEAN_ | Use +double+ (+ON+) or +float+ (+OFF+) [+ON+]
| +ARGOS_DOCUMENTATION+       | _BOOLEAN_ | Create documentation (API, manpage, etc.) [+ON+]
| +ARGOS_USE_GOOGLEPERFTOOLS+ | _BOOLEAN_ | Use Google PerfTools in +Debug+ builds, if present [+ON+]
|==========================================================================================================

You can pass the wanted values from the command line. For instance, if you
wanted to set explictly all the default values, you would write:

 $ cd argos3/build_simulator
 $ cmake -DCMAKE_BUILD_TYPE=Debug \
         -DCMAKE_INSTALL_PREFIX=/usr/local \
         -DARGOS_BUILD_FOR=simulator \
         -DARGOS_THREADSAFE_LOG=ON \
         -DARGOS_DYNAMIC_LOADING=ON \
         -DARGOS_USE_DOUBLE=ON \
         -DARGOS_DOCUMENTATION=ON \
         -DARGOS_USE_GOOGLEPERFTOOLS=ON \
         ../src

IMPORTANT: When +ARGOS_BUILD_FOR+ is set to +simulator+, +ARGOS_THREADSAFE_LOG+
           and +ARGOS_DYNAMIC_LOADING+ must be ON.

NOTE: If +CMAKE_BUILD_TYPE+ is set to +Debug+ and +ARGOS_USE_GOOGLEPERFTOOLS+ is ON,
      the CMake scripts search for Google Perftools (+libtmalloc.so+ and
      +libprofiler.so+), and use them if present.

TIP: For production environments, it is recommended to compile ARGoS with
     +CMAKE_BUILD_TYPE+ set to +Release+. If you want to debug ARGoS, it is
     recommended to set +CMAKE_BUILD_TYPE+ to +Debug+. The other standard
     settings (empty and +RelWithDebInfo+) are supported but should be avoided.

Installing ARGoS from the compiled binaries
--------------------------------------------

To install ARGoS after having compiled the sources, it is enough to write:

 $ cd argos3
 $ cd build_simulator # or 'cd build_myrobot'
 $ sudo make install

Alternatively, one can create a package. To build all the packages supported by
your system, run these commands:

 $ cd argos3
 $ cd build_simulator # or 'cd build_myrobot'
 $ sudo make package

This typically creates a self-extracting .tar.gz archive, a .tar.bz2 archive,
a .zip archive, and a platform-specific archive (.deb, .rpm, or a MacOSX
package). You can determine which packages to create by setting the variables
+CPACK_BINARY_DEB+, +CPACK_BINARY_RPM+, +CPACK_BINARY_STGZ+,
+CPACK_BINARY_TBZ2+, +CPACK_BINARY_TGZ+, +CPACK_BINARY_TZ+.

IMPORTANT: the creation of source packages through the command
           +make package_source+ is not supported.

An easier option is to install ARGoS from a package distributed at
http://iridia.ulb.ac.be/argos/download.php.
